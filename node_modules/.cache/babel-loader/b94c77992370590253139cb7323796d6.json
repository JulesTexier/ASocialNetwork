{"ast":null,"code":"var _jsxFileName = \"/Users/julestexier/Google_Drive/PRO/THP_NEXT/Semaine 7 - React avance\\u0301 (suite)/Jour 2 - Projet Re\\u0301seau social/projet_reseau copie/src/pages/Login/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './style.css';\nimport { LogFailure, LogSuccess } from 'reduxx/Log/LogActions';\nimport { useDispatch } from 'react-redux';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [identifier, setIdentifier] = React.useState('');\n  const [password, setGivenPassword] = React.useState('');\n  const dispatch = useDispatch();\n  const data = {\n    identifier: identifier,\n    password: password\n  };\n\n  const handleFetch = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:1337/auth/local\", {\n      method: 'POST',\n      header: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      if (data.status === 'error') {\n        dispatch(LogFailure(data.message, false));\n      } else {\n        dispatch(LogSuccess(data, true));\n        Cookies.set('token', data.jwt);\n        Cookies.set('id', data.user.id);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFetch,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Identifier (Username or Email)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: identifier,\n        name: \"identifier\",\n        onChange: e => setIdentifier(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setGivenPassword(e.target.value),\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"Nv/Q55JSHfgDBhD53nNd56N5Mg8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/julestexier/Google_Drive/PRO/THP_NEXT/Semaine 7 - React avancé (suite)/Jour 2 - Projet Réseau social/projet_reseau copie/src/pages/Login/index.jsx"],"names":["React","LogFailure","LogSuccess","useDispatch","Cookies","Login","identifier","setIdentifier","useState","password","setGivenPassword","dispatch","data","handleFetch","e","preventDefault","fetch","method","header","body","JSON","stringify","then","response","json","status","message","set","jwt","user","id","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,uBAAvC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAMA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAElB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACC,QAAD,EAAWC,gBAAX,IAA+BV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAArC;AAEA,QAAMG,QAAQ,GAAGR,WAAW,EAA5B;AAGA,QAAMS,IAAI,GAAG;AACXN,IAAAA,UAAU,EAAEA,UADD;AAEXG,IAAAA,QAAQ,EAAEA;AAFC,GAAb;;AAMF,QAAMI,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AAEGC,IAAAA,KAAK,CAAC,kCAAD,EAAqC;AACxCC,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,MAAM,EAAE;AACP,wBAAgB;AADT,OAFgC;AAKzCC,MAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAeT,IAAf;AALkC,KAArC,CAAL,CAOCU,IAPD,CAOQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPrB,EAQCF,IARD,CAQQV,IAAD,IAAU;AACd,UAAIA,IAAI,CAACa,MAAL,KAAgB,OAApB,EAA6B;AAC3Bd,QAAAA,QAAQ,CAACV,UAAU,CAACW,IAAI,CAACc,OAAN,EAAe,KAAf,CAAX,CAAR;AACD,OAFD,MAEO;AACLf,QAAAA,QAAQ,CAACT,UAAU,CAACU,IAAD,EAAO,IAAP,CAAX,CAAR;AACAR,QAAAA,OAAO,CAACuB,GAAR,CAAY,OAAZ,EAAqBf,IAAI,CAACgB,GAA1B;AACAxB,QAAAA,OAAO,CAACuB,GAAR,CAAY,IAAZ,EAAkBf,IAAI,CAACiB,IAAL,CAAUC,EAA5B;AACD;AACH,KAhBD;AAiBF,GApBH;;AAuBE,sBACM;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEjB,WAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEP,UAA1B;AAAsC,QAAA,IAAI,EAAC,YAA3C;AAAwD,QAAA,QAAQ,EAAGQ,CAAD,IAAKP,aAAa,CAACO,CAAC,CAACiB,MAAF,CAASC,KAAV,CAApF;AAAsG,QAAA,QAAQ;AAA9G;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,EAAEvB,QAA9B;AAAwC,QAAA,QAAQ,EAAGK,CAAD,IAAKJ,gBAAgB,CAACI,CAAC,CAACiB,MAAF,CAASC,KAAV,CAAvE;AAAyF,QAAA,IAAI,EAAC;AAA9F;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADN;AAYD,CAjDD;;GAAM3B,K;UAKaF,W;;;KALbE,K;AAmDN,eAAeA,KAAf","sourcesContent":["import React from 'react'\nimport './style.css';\nimport { LogFailure, LogSuccess } from 'reduxx/Log/LogActions';\nimport { useDispatch } from 'react-redux' \nimport Cookies from 'js-cookie'\n\n\n\n\n\nconst Login = () => {\n\n  const [identifier, setIdentifier] = React.useState('');\n  const [password, setGivenPassword] = React.useState('');\n\n  const dispatch = useDispatch()\n\n\n  const data = {\n    identifier: identifier,\n    password: password,\n  };\n\n\nconst handleFetch = (e) => {\n  e.preventDefault();\n\n     fetch(\"http://localhost:1337/auth/local\", {\n       method: 'POST',\n       header: {\n        \"Content-Type\": \"application/json\"\n      },\n      body : JSON.stringify(data)\n     })\n     .then ((response) => response.json())\n     .then ((data) => {\n        if (data.status === 'error') {\n          dispatch(LogFailure(data.message, false))\n        } else {\n          dispatch(LogSuccess(data, true));\n          Cookies.set('token', data.jwt );\n          Cookies.set('id', data.user.id );\n        }\n     })\n  }\n\n\n  return (\n        <div className=\"form\">\n          <form onSubmit={handleFetch}>\n            <h1>Login</h1>\n            <h2>Identifier (Username or Email)</h2>\n            <input type=\"text\" value={identifier} name=\"identifier\" onChange={(e)=>setIdentifier(e.target.value)} required />\n            <h2>Password</h2>\n            <input type=\"password\" value={password} onChange={(e)=>setGivenPassword(e.target.value)} name=\"password\"/>\n            <input type=\"submit\" value=\"Envoyer\"/>\n          </form>\n        </div>\n  )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}